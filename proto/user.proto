syntax = "proto3";

package user;

import "google/protobuf/timestamp.proto";
import "proto/google/api/annotations.proto";

option go_package = "internal/transport/rpc/pb/user";

service UserService {
  // Register a new user account.
  rpc Register(SignUpRequest) returns (SignUpResponse) {
    option (google.api.http) = {
      post: "/v1/user/signup" // Specify the HTTP POST endpoint
      body: "*"
    };
  }

  // User login with username and password.
  rpc Login(SignInRequest) returns (SignInResponse) {
    option (google.api.http) = {
      post: "/v1/user/login" // Specify the HTTP POST endpoint
      body: "*"
    };
  }
}

// Requests

message SignUpRequest {
  string username = 1; // User's desired username. (Required)
  string password = 2; // User's desired password. (Required)
}

message SignInRequest {
  string username = 1; // User's username. (Required)
  string password = 2; // User's password. (Required)
}

// Responses

message Tokens {
  string refreshToken = 1; // Refresh token. (Required)
  google.protobuf.Timestamp refreshExpiryAt = 2; // DateTime when refresh token will expire (Required) 
  string accessToken = 3; // Access token. (Required)
  google.protobuf.Timestamp accessExpiryAt = 4; // DateTime when access token will expire (Required) 
}

message SignUpResponse {
  bool status = 1; // Status of the sign-up operation. (Required)
  Tokens tokens = 2; // All info about tokens (Optional)
  string errorMessage = 3; // Error message in case of failure. (Optional)
}

message SignInResponse {
  bool status = 1; // Status of the transfer operation. (Required)
  Tokens tokens = 2; // All info about tokens (Optional)
  string errorMessage = 3; // Error message in case of failure. (Optional)
}

